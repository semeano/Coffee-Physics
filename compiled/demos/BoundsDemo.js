// Generated by CoffeeScript 1.9.1

/* BoundsDemo */
var BoundsDemo,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BoundsDemo = (function(superClass) {
  extend(BoundsDemo, superClass);

  function BoundsDemo() {
    return BoundsDemo.__super__.constructor.apply(this, arguments);
  }

  BoundsDemo.prototype.setup = function() {
    var edge, i, j, max, min, p, results;
    BoundsDemo.__super__.setup.apply(this, arguments);
    min = new Vector(0.0, 0.0);
    max = new Vector(this.width, this.height);
    edge = new EdgeWrap(min, max);
    results = [];
    for (i = j = 0; j <= 200; i = ++j) {
      p = new Particle(Random(0.5, 4.0));
      p.setRadius(p.mass * 5);
      p.moveTo(new Vector(Random(this.width), Random(this.height)));
      p.behaviours.push(new Wander(0.2, 120, Random(1.0, 2.0)));
      p.behaviours.push(edge);
      results.push(this.physics.particles.push(p));
    }
    return results;
  };

  return BoundsDemo;

})(Demo);
